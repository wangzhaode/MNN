[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "ninja; sys_platform == 'windows'",
    "numpy"
]

build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
test-skip = [
    "cp36-*",
    "*-macosx_arm64",
    "*-macosx_x86_64"
]
test-requires = [
    "opencv-python",
    "numpy",
    "torch"
]
test-command = [
  "cd {project}/pymnn/test",
  "ls",
  "python unit_test.py",
  "cd ../.."
]

[tool.cibuildwheel.macos]
archs = ["native"]
build = "cp*-macosx_*"
before-all = [
    "pushd pymnn/pip_package",
    "python3 build_deps.py",
    "popd"
]
repair-wheel-command = ""

[tool.cibuildwheel.linux]
build = "cp*-manylinux*"
skip = "pp*"
before-all = [
    "pushd pymnn/pip_package",
    "python3 build_deps.py",
    "popd"
]
archs = ["native"]
repair-wheel-command = [
    "export LD_LIBRARY_PATH=$(pwd)/pymnn_build/tools/converter/libtorch/lib:$LD_LIBRARY_PATH",
    "echo $LD_LIBRARY_PATH",
    "auditwheel repair --plat manylinux2014_${CIBW_ARCHS_LINUX} -w {dest_dir} {wheel}"
]

[tool.cibuildwheel.windows]
before-all = [
    "cd pymnn/pip_package",
    "python3 build_deps.py",
    "cd ../.."
]
test-command = [
  "cd /d {project}/pymnn/test",
  "python unit_test.py",
  "cd ../.."
]
